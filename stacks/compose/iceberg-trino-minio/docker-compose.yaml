services:
  # 🐘 PostgreSQL for Hive Metastore
  metastore-db:
    image: postgres:17
    container_name: metastore-db
    networks:
      - trino-network
    restart: always
    environment:
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
      POSTGRES_DB: metastore
    ports:
      - "5433:5432"
    volumes:
      - metastore-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "hive", "-d", "metastore", "-h", "localhost"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  # 🐝 Apache Hive Metastore
  hudi-hive-metastore:
    image: apache/hive:4.0.0-beta-1
    container_name: hive-metastore
    networks:
      - trino-network
    restart: always
    depends_on:
      - metastore-db  
    environment:
      SERVICE_NAME: metastore
      HIVE_METASTORE_USER: hive
      HIVE_METASTORE_PASSWORD: hive
      HIVE_METASTORE_DATABASE: metastore
      HIVE_METASTORE_DB_HOST: metastore-db
      HIVE_METASTORE_PORT: 9083
    ports:
      - "9083:9083"
    command: >
      /opt/hive/bin/schematool -initSchema -dbType postgres &&
      /opt/hive/bin/hive --service metastore
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "9083"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  # 📊 Trino Query Engine
  trino:
    image: trinodb/trino:latest
    container_name: trino
    hostname: trino
    networks:
      - trino-network
    ports:
      - "8080:8080"
    volumes:
      - ./trino-config:/etc/trino
    depends_on:
      - hudi-hive-metastore
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/info"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  # 🧭 Trino CLI
  trino-cli:
    image: openjdk:11
    container_name: trino-cli
    networks:
      - trino-network
    depends_on:
      - trino
    entrypoint: >
      /bin/sh -c "
        apt-get update && apt-get install -y netcat && echo 'Netcat instalado' &&
        curl -o /usr/local/bin/trino https://repo1.maven.org/maven2/io/trino/trino-cli/447/trino-cli-447-executable.jar && echo 'trino-cli baixado com sucesso' &&
        chmod +x /usr/local/bin/trino && echo 'trino-cli permissões alteradas' &&
        while ! nc -z trino 8080; do echo '⏳ Esperando o Trino...'; sleep 10; done &&
        exec tail -f /dev/null"
    healthcheck:
      test: ["CMD", "curl", "-s", "http://trino:8080/v1/info"]
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s

  # ☁️ MinIO for S3-like storage
  minio:
    image: quay.io/minio/minio
    container_name: minio
    networks:
      - trino-network
    restart: always
    ports:
      - "9000:9000"   # S3 API
      - "9090:9090"   # MinIO Console
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9090"
    healthcheck:
      test: ["CMD", "mc", "alias", "set", "local", "http://localhost:9000", "admin", "admin123"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  # 📂 MinIO Client for managing MinIO buckets
  minio-client:
    image: minio/mc
    container_name: minio-client
    networks:
      - trino-network
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set local http://minio:9000 admin admin123;
      mc mb local/iceberg-data;
      mc policy set public local/iceberg-data;
      exit 0;
      "
    healthcheck:
      test: ["CMD", "mc", "ls", "local/iceberg-data"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

volumes:
  metastore-db-data:
  minio-data:

networks:
  trino-network:
    name: trino-network
    driver: bridge


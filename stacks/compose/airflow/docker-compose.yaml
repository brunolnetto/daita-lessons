services:
  # üêò PostgreSQL for Airflow metadata storage
  airflow-db:
    image: postgres:17
    container_name: airflow-db
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow", "-d", "airflow", "-h", "localhost"]
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 10s
    volumes:
      - airflow-db-data:/var/lib/postgresql/data
    networks:
      - airflow-network

  # üî• Redis for caching
  airflow-redis:
    image: redis:latest
    container_name: airflow-redis
    restart: always
    networks:
      - airflow-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 10s

  # üåû Airflow Init (database setup and user creation)  
  airflow-init:
    image: apache/airflow:latest
    container_name: airflow-init
    depends_on:
      - airflow-db
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "-sxEY3dsTb2ov1PUAu5TfHpZp02D9IQwLaG6NYwdSgM=" # Fernet key
    entrypoint: [
      "bash", 
      "-c", 
      "airflow db migrate && \ 
      airflow users create --username admin --password admin --firstname Admin --lastname User --email admin@example.com --role Admin"
    ]
    networks:
      - airflow-network

  # üïí Airflow Scheduler
  airflow-scheduler:
    image: apache/airflow:latest
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-db
      - airflow-redis
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://airflow-redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@airflow-db:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "-sxEY3dsTb2ov1PUAu5TfHpZp02D9IQwLaG6NYwdSgM="
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__SCHEDULER__SCHEDULER_HEARTBEAT_SEC: 60
      AIRFLOW__SCHEDULER__JOB_HEARTBEAT_SEC: 120
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    networks:
      - airflow-network
    command: scheduler
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8793/health"]
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 10s

  # ü¶â Airflow Webserver 
  airflow-webserver:
    image: apache/airflow:latest
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-scheduler
      - airflow-init
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://airflow-redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@airflow-db:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "-sxEY3dsTb2ov1PUAu5TfHpZp02D9IQwLaG6NYwdSgM="
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    networks:
      - airflow-network
    command: bash -c "airflow db init && airflow webserver"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 10s

  # üî® Airflow Worker for CeleryExecutor
  airflow-worker:
    image: apache/airflow:latest
    container_name: airflow-worker
    restart: always
    depends_on:
      - airflow-scheduler
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://airflow-redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@airflow-db:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "-sxEY3dsTb2ov1PUAu5TfHpZp02D9IQwLaG6NYwdSgM="
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    networks:
      - airflow-network
    command: celery worker


volumes:
  airflow-db-data:
  airflow-dags:
  airflow-logs:
  airflow-plugins:

networks:
  airflow-network:
    driver: bridge
